security:
  enable_authenticator_manager: true

  role_hierarchy:
    ROLE_DEVELOPER: [ ROLE_USER ]
    ROLE_ADMIN: [ ROLE_USER ]

  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      jwt: ~

    api_token:
      pattern: ^/api/token
      stateless: true
      json_login:
        username_path: email
        check_path: /api/token
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    api_token_refresh:
      pattern: ^/api/token/refresh

    admin_login:
      pattern: ^/admin/login

    admin:
      pattern: ^/admin
      stateless: true
      jwt: ~
      logout:
        path: admin_logout
        delete_cookies:
          BEARER: null

    api:
      pattern: ^/api
      stateless: true
      jwt: ~

  access_control:
      - { path: ^/(_(profiler|wdt)|css|images|js)/, roles: ROLE_DEVELOPER }
      - { path: ^/api/token, roles: PUBLIC_ACCESS }
      - { path: ^/api/token/refresh, roles: PUBLIC_ACCESS }
      - { path: ^/api, roles: ROLE_DEVELOPER }
      - { path: ^/admin/login, roles: PUBLIC_ACCESS }
      - { path: ^/admin, roles: [ROLE_DEVELOPER,ROLE_ADMIN] }
when@test:
    security:
      password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
          algorithm: plaintext